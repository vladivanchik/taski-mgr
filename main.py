# Импортирую модули time(для функции sleep), pickle(для базы данных).
import time, pickle
# Функция для загрузки данных из файла
def save_users(user):
    with open('users.pickle', 'wb') as file:
        pickle.dump(user, file)
# Функция для загрузки данных из файла
def load_users():
    try:
        with open('users.pickle', 'rb') as file:
            users = pickle.load(file)
    except FileNotFoundError:
        print("Программа создаст новую таблицу...")
        users = []
    
    return users
# Загрузка данных из файла
users = load_users()

"""""        
sel_num = input("Выберите водителя из списка: " + str(users) + "\nЧтобы перейти в режим добавление пользователей введите \"Добавить нового пользователя\"\nЧтобы перейти в режим удаления пользователя из списка введите \"Удалить\": ")

time.sleep(0.5)
# Функция которая позволяет пользователю добавлять водителей в список
def add_new_user():
    if sel_num.lower() == "добавить нового пользователя":
        print("Сейчас вы перешли в режим добавления нового пользователя...")
        time.sleep(1)
        
        back = input("Чтобы отменить это действие нажмите \"Enter\" \nЕсли вы хотите добавить нового пользователя введите \"Добавить\" ")
        # Выход с режима добавления пользователей
        if back == "":
            print("Сейчас программа завершит свою работу...")
            time.sleep(1)
            exit()
            
        elif back.lower() == "добавить":
            # Тут будет храниться информация по имя фамилия которую ввел пользователь
            new_value = input("Введите ИФ пользователя которого хотите добавить: ")
            save = input("Сохранить результат? ")
            # Сохраняет результат пользователя
            if save.lower() == "да":
                users.append(new_value)
                save_users(users)
                print("Ваш список пользователей сейчас такой " + str(users))
                time.sleep(1)
                ask = input("Чтобы добавить ещё одного пользователя, то введите \"Да\" \nЕсли не хотите ничего добавлять, просто нажмите \"Enter\" ")
                # Цикл пользовяющий добавлять много пользователей одновременно
                while ask.lower() == "да":
                    new_value2 = input("Введите ИФ пользователя которого хотите добавить: ")
                    if new_value2 == "":
                        print("Программа завершает свою роботу сохраняя данные параметры...")
                        exit()
                    users.append(new_value2)
                    save_users(users)
                    print("Чтобы закончить с добавлением пользователей введите \"Enter\" в следующем диалоговом окне.")
                    time.sleep(0.5)
                    
                else:
                    print("Программа завершает свою работу...")
                    time.sleep(1)
                    exit()
                    
            elif save.lower() == "нет":
                print("Вы выбрали вариант не сохранять данные изменения, программа завершает свою работу без сохранения данных...")
                time.sleep(1)
                exit()
                
            else:
                print("Вы ввели неправильные значения, программа завершит свою работу...")
                time.sleep(1)
                exit()
                
        return back, new_value, save

# Вызов функции по добавлению новый пользователей в список
add_new_user()
#Функция позволяющая удалять ненужных водителей из списка
def delete_user():
    if sel_num.lower() == "удалить":
        print("Сейчас вы перешли в режим удаления пользователей, чтобы отменить нажмите \"Enter\"")
        print(users)
        del_name = input("Введите имя человека которого вы хотите удалить из списка(если вы хотите выйти, нажмите Enter) ")
        if del_name in users:
            sure = input("Вы точно уверены в том что вы хотите удалить пользователя " + del_name + "? ")
            if sure.lower() == "да":                
                print("Программа удаляет водителя " + del_name)
                time.sleep(1)
                users.remove(del_name)
                print("Программа применяет изменения")
                time.sleep(1)
                save_users(users)
                print("Программа завершает работу...")
                exit()
            else:
                print("Программа завершает свою работу, без сохранений данных...")
                time.sleep(0.5)
                exit()
        elif del_name == "":
            print("Вы выбрали не приносить каких-либо изменений, программа завершает свою работу...")
            time.sleep(0.5)
            exit()
        else:
            print("Такого пользователя не существует, программа завершает свою работу...")
            time.sleep(0.5)
            exit()
delete_user()
if sel_num in users:
    print("Сейчас вы смотрите информацию по водителю: " + sel_num)
    time.sleep(0.5)

else:
    print("Такого водителя не существует, попробуйте заново")
    exit()
    
dohod = int(input("Чистый доход водителя в кроннах: "))
bonus = int(input("Введите колиство бонусов(будут поделены на 50%): "))
orenda = int(input("Введите затраты на аренду: "))
time.sleep(0.5)

print("Также будут вычтены 700 кронн за гараж")

time.sleep(1)

# Функция для вычесления чистого дохода водителя
def present():
    result = dohod - (bonus * 0.5)
    amount = result - (orenda - 700)
    print("Чистый доход работника \"" + sel_num + "\" Составляет " + str(amount))
    return result, amount
# Вызов функции для вычесления чистого дохода
present()
"""